{"ast":null,"code":"var _jsxFileName = \"/home/tushhr/Projects/Page One/Todo-React/todo-Redux/src/components/EditTodo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTodoListContext } from '../context/TodoListContext';\nimport '../styles/TodoForm.scss';\nimport { EDIT_TODO_PLACEHOLDER } from '../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditTodo(_ref) {\n  _s();\n  let {\n    editableTodo,\n    setEditView\n  } = _ref;\n  const {\n    id: oldTodoId,\n    task: oldTodoTask,\n    desc: oldTodoDesc\n  } = editableTodo;\n\n  // Updating our new todo, with the old todo's task\n  const [newTodo, setNewTodo] = useState({\n    id: oldTodoId,\n    task: oldTodoTask,\n    desc: oldTodoDesc\n  });\n\n  // Update Todo list according to the updated todo-task\n  const updateTodoItem = () => {\n    editTodoItem(newTodo);\n    setEditView(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-form__fields\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"todo-form__input\",\n        placeholder: EDIT_TODO_PLACEHOLDER.task,\n        onChange: e => setNewTodo({\n          ...newTodo,\n          task: e.target.value\n        }),\n        value: newTodo.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        className: \"todo-form__input todo-form__desc\",\n        placeholder: EDIT_TODO_PLACEHOLDER.desc,\n        onChange: e => setNewTodo({\n          ...newTodo,\n          desc: e.target.value\n        }),\n        value: newTodo.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      id: \"todo-submit-button\",\n      className: \"todo-form__button btn btn-primary\",\n      onClick: () => updateTodoItem(),\n      children: \"Update!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(EditTodo, \"9OOMmpxkkc/PtGqzlbqomBOwrmM=\");\n_c = EditTodo;\nvar _c;\n$RefreshReg$(_c, \"EditTodo\");","map":{"version":3,"names":["React","useState","useSelector","useTodoListContext","EDIT_TODO_PLACEHOLDER","EditTodo","editableTodo","setEditView","id","oldTodoId","task","oldTodoTask","desc","oldTodoDesc","newTodo","setNewTodo","updateTodoItem","editTodoItem","e","target","value"],"sources":["/home/tushhr/Projects/Page One/Todo-React/todo-Redux/src/components/EditTodo.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { useTodoListContext } from '../context/TodoListContext';\n\nimport '../styles/TodoForm.scss';\nimport { EDIT_TODO_PLACEHOLDER } from '../utils/constants';\n\nexport default function EditTodo({ editableTodo, setEditView }) {\n  const { id: oldTodoId, task: oldTodoTask, desc: oldTodoDesc } = editableTodo;\n\n   // Updating our new todo, with the old todo's task\n   const [newTodo, setNewTodo] = useState({\n    id: oldTodoId,\n    task: oldTodoTask,\n    desc: oldTodoDesc,\n  });\n\n  // Update Todo list according to the updated todo-task\n  const updateTodoItem = () => {\n    editTodoItem(newTodo);\n    setEditView(false);\n  };\n\n  return (\n    <div>\n      <div className=\"todo-form__fields\">\n        <input\n          type=\"text\"\n          className=\"todo-form__input\"\n          placeholder={EDIT_TODO_PLACEHOLDER.task}\n          onChange={(e) => setNewTodo({ ...newTodo, task: e.target.value })}\n          value={newTodo.task}\n        />\n\n        <textarea\n          type=\"text\"\n          className=\"todo-form__input todo-form__desc\"\n          placeholder={EDIT_TODO_PLACEHOLDER.desc}\n          onChange={(e) => setNewTodo({ ...newTodo, desc: e.target.value })}\n          value={newTodo.desc}\n        />\n      </div>\n\n      <button\n        type=\"button\"\n        id=\"todo-submit-button\"\n        className=\"todo-form__button btn btn-primary\"\n        onClick={() => updateTodoItem()}\n      >\n        Update!\n      </button>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,kBAAkB,QAAQ,4BAA4B;AAE/D,OAAO,yBAAyB;AAChC,SAASC,qBAAqB,QAAQ,oBAAoB;AAAC;AAE3D,eAAe,SAASC,QAAQ,OAAgC;EAAA;EAAA,IAA/B;IAAEC,YAAY;IAAEC;EAAY,CAAC;EAC5D,MAAM;IAAEC,EAAE,EAAEC,SAAS;IAAEC,IAAI,EAAEC,WAAW;IAAEC,IAAI,EAAEC;EAAY,CAAC,GAAGP,YAAY;;EAE3E;EACA,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC;IACtCO,EAAE,EAAEC,SAAS;IACbC,IAAI,EAAEC,WAAW;IACjBC,IAAI,EAAEC;EACR,CAAC,CAAC;;EAEF;EACA,MAAMG,cAAc,GAAG,MAAM;IAC3BC,YAAY,CAACH,OAAO,CAAC;IACrBP,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,mBAAmB;MAAA,wBAChC;QACE,IAAI,EAAC,MAAM;QACX,SAAS,EAAC,kBAAkB;QAC5B,WAAW,EAAEH,qBAAqB,CAACM,IAAK;QACxC,QAAQ,EAAGQ,CAAC,IAAKH,UAAU,CAAC;UAAE,GAAGD,OAAO;UAAEJ,IAAI,EAAEQ,CAAC,CAACC,MAAM,CAACC;QAAM,CAAC,CAAE;QAClE,KAAK,EAAEN,OAAO,CAACJ;MAAK;QAAA;QAAA;QAAA;MAAA,QACpB,eAEF;QACE,IAAI,EAAC,MAAM;QACX,SAAS,EAAC,kCAAkC;QAC5C,WAAW,EAAEN,qBAAqB,CAACQ,IAAK;QACxC,QAAQ,EAAGM,CAAC,IAAKH,UAAU,CAAC;UAAE,GAAGD,OAAO;UAAEF,IAAI,EAAEM,CAAC,CAACC,MAAM,CAACC;QAAM,CAAC,CAAE;QAClE,KAAK,EAAEN,OAAO,CAACF;MAAK;QAAA;QAAA;QAAA;MAAA,QACpB;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eAEN;MACE,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,oBAAoB;MACvB,SAAS,EAAC,mCAAmC;MAC7C,OAAO,EAAE,MAAMI,cAAc,EAAG;MAAA,UACjC;IAED;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GA9CuBX,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}