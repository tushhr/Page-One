{"ast":null,"code":"const initialState = {\n  todoList: {},\n  todoListLength: 0,\n  showTodoForm: false\n};\nconst ADD_TODO_ITEM = '/add';\nconst EDIT_TODO_ITEM = '/edit';\nconst TOGGLE_TODO_FORM = '/toggle-form';\nconst UPDATE_TODO_ITEM_STATUS = '/update/status';\nconst DELETE_TODO_ITEM = '/delete';\n\n// Add a new todo item\nexport function addTodoItem(_ref) {\n  let {\n    task: newTodoTask,\n    desc: newTodoDesc\n  } = _ref;\n  const newTodoItem = {\n    task: newTodoTask,\n    desc: newTodoDesc,\n    status: false\n  };\n  return {\n    type: ADD_TODO_ITEM,\n    payload: newTodoItem\n  };\n}\n\n// Edit any todo item: task & description\nexport function editTodoItem(_ref2) {\n  let {\n    id,\n    task,\n    desc\n  } = _ref2;\n  return {\n    type: EDIT_TODO_ITEM,\n    payload: {\n      id,\n      task,\n      desc\n    }\n  };\n}\nexport function toggleTodoForm(act) {\n  return {\n    type: TOGGLE_TODO_FORM,\n    payload: act\n  };\n}\nexport function updateTodoItemStatus(todoId) {\n  return {\n    type: UPDATE_TODO_ITEM_STATUS,\n    payload: todoId\n  };\n}\n\n// Delete a delete todo item\nexport function delelteTodoItem(todoId) {\n  return {\n    type: DELETE_TODO_ITEM,\n    payload: todoId\n  };\n}\nexport default function todoStore() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_TODO_ITEM:\n      return {\n        ...state,\n        todoList: {\n          ...state.todoList,\n          [state.todoListLength + 1]: {\n            ...action.payload,\n            id: state.todoListLength + 1\n          }\n        },\n        todoListLength: state.todoListLength + 1\n      };\n    case EDIT_TODO_ITEM:\n      return {\n        ...state,\n        todoList: {\n          ...state.todoList,\n          [action.payload.id]: {\n            ...state.todoList[action.payload.id],\n            task: action.payload.task,\n            desc: action.payload.desc\n          }\n        }\n      };\n    case TOGGLE_TODO_FORM:\n      return {\n        ...state,\n        showTodoForm: action.payload\n      };\n    case UPDATE_TODO_ITEM_STATUS:\n      return {\n        ...state,\n        todoList: {\n          ...state.todoList,\n          [action.payload]: {\n            ...state.todoList[action.payload],\n            status: !state.todoList[action.payload].status\n          }\n        }\n      };\n    case DELETE_TODO_ITEM:\n      const tmpTodoList = {\n        ...state.todoList\n      };\n      delete tmpTodoList[action.payload];\n      return {\n        ...state,\n        todoList: tmpTodoList\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["initialState","todoList","todoListLength","showTodoForm","ADD_TODO_ITEM","EDIT_TODO_ITEM","TOGGLE_TODO_FORM","UPDATE_TODO_ITEM_STATUS","DELETE_TODO_ITEM","addTodoItem","task","newTodoTask","desc","newTodoDesc","newTodoItem","status","type","payload","editTodoItem","id","toggleTodoForm","act","updateTodoItemStatus","todoId","delelteTodoItem","todoStore","state","action","tmpTodoList"],"sources":["/home/tushhr/Projects/Page One/Todo-React/todo-Redux/src/stores/todo.js"],"sourcesContent":["const initialState = {\n  todoList: {},\n  todoListLength: 0,\n  showTodoForm: false,\n};\n\nconst ADD_TODO_ITEM = '/add';\nconst EDIT_TODO_ITEM = '/edit';\nconst TOGGLE_TODO_FORM = '/toggle-form';\nconst UPDATE_TODO_ITEM_STATUS = '/update/status';\nconst DELETE_TODO_ITEM = '/delete';\n\n\n// Add a new todo item\nexport function addTodoItem({ task: newTodoTask, desc: newTodoDesc }) {\n  const newTodoItem = {\n    task: newTodoTask,\n    desc: newTodoDesc,\n    status: false,\n  };\n\n  return {\n    type: ADD_TODO_ITEM,\n    payload: newTodoItem,\n  };\n}\n\n// Edit any todo item: task & description\nexport function editTodoItem({ id, task, desc }) {\n  return {\n    type: EDIT_TODO_ITEM,\n    payload: { id, task, desc },\n  };\n}\n\nexport function toggleTodoForm(act) {\n  return {\n    type: TOGGLE_TODO_FORM,\n    payload: act,\n  };\n}\n\nexport function updateTodoItemStatus(todoId) {\n  return {\n    type: UPDATE_TODO_ITEM_STATUS,\n    payload: todoId,\n  };\n}\n\n// Delete a delete todo item\nexport function delelteTodoItem(todoId) {\n  return {\n    type: DELETE_TODO_ITEM,\n    payload: todoId,\n  };\n}\n\nexport default function todoStore(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO_ITEM:\n      return {\n        ...state,\n        todoList: {\n          ...state.todoList,\n          [state.todoListLength + 1]: {\n            ...action.payload,\n            id: state.todoListLength + 1,\n          },\n        },\n        todoListLength: state.todoListLength + 1,\n      };\n    case EDIT_TODO_ITEM:\n      return {\n        ...state,\n        todoList: {\n          ...state.todoList,\n          [action.payload.id]: {\n            ...state.todoList[action.payload.id],\n            task: action.payload.task,\n            desc: action.payload.desc,\n          },\n        },\n      };\n    case TOGGLE_TODO_FORM:\n      return {\n        ...state,\n        showTodoForm: action.payload,\n      };\n    case UPDATE_TODO_ITEM_STATUS:\n      return {\n        ...state,\n        todoList: {\n          ...state.todoList,\n          [action.payload]: {\n            ...state.todoList[action.payload],\n            status: !state.todoList[action.payload].status,\n          },\n        },\n      };\n    case DELETE_TODO_ITEM:\n      const tmpTodoList = { ...state.todoList };\n      delete tmpTodoList[action.payload];\n\n      return {\n        ...state,\n        todoList: tmpTodoList,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}