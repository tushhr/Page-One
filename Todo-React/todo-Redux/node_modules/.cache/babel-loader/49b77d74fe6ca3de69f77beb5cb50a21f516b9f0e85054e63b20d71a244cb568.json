{"ast":null,"code":"var _jsxFileName = \"/home/tushhr/Projects/Page One/Todo-React/todo-Redux/src/context/TodoListContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoListContext = /*#__PURE__*/createContext();\nexport const TodoListProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [todoList, setTodoList] = useState([]);\n\n  // Add a new todo item\n  const addTodoItem = (newTodoTask, newTodoDesc) => {\n    let todoId = 0;\n    if (todoList.length) {\n      todoId = todoList[todoList.length - 1].id + 1;\n    }\n    const newTodoItem = {\n      id: todoId,\n      task: newTodoTask,\n      desc: newTodoDesc,\n      status: false\n    };\n    setTodoList(prevState => [...prevState, newTodoItem]);\n  };\n\n  // Edit any todo item: task & description\n  const editTodoItem = (todoId, todoTask, todoDesc) => {\n    const tmpTodoList = todoList.map(todo => todo.id === todoId ? {\n      ...todo,\n      task: todoTask,\n      desc: todoDesc\n    } : todo);\n    setTodoList(tmpTodoList);\n  };\n\n  // Change status of todo item\n  const updateTodoItemStatus = todoId => {\n    setTodoList(todoList.map(todo => todo.id === todoId ? {\n      ...todo,\n      status: !todo.status\n    } : todo));\n  };\n\n  // Delete a delete todo item\n  const delelteTodoItem = todoId => {\n    setTodoList(todoList.filter(todo => todo.id !== todoId));\n  };\n  return /*#__PURE__*/_jsxDEV(TodoListContext.Provider, {\n    value: {\n      todoList,\n      setTodoList,\n      addTodoItem,\n      editTodoItem,\n      delelteTodoItem,\n      updateTodoItemStatus\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoListProvider, \"8oII/eZSxfH0CVCrakPxQrDDmr8=\");\n_c = TodoListProvider;\nexport const useTodoListContext = () => {\n  _s2();\n  return useContext(TodoListContext);\n};\n_s2(useTodoListContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"TodoListProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","TodoListContext","TodoListProvider","children","todoList","setTodoList","addTodoItem","newTodoTask","newTodoDesc","todoId","length","id","newTodoItem","task","desc","status","prevState","editTodoItem","todoTask","todoDesc","tmpTodoList","map","todo","updateTodoItemStatus","delelteTodoItem","filter","useTodoListContext"],"sources":["/home/tushhr/Projects/Page One/Todo-React/todo-Redux/src/context/TodoListContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst TodoListContext = createContext();\n\nexport const TodoListProvider = ({ children }) => {\n  const [todoList, setTodoList] = useState([]);\n\n  // Add a new todo item\n  const addTodoItem = (newTodoTask, newTodoDesc) => {\n    let todoId = 0;\n    if (todoList.length) {\n      todoId = todoList[todoList.length - 1].id + 1;\n    }\n\n    const newTodoItem = {\n      id: todoId,\n      task: newTodoTask,\n      desc: newTodoDesc,\n      status: false,\n    };\n\n    setTodoList((prevState) => [...prevState, newTodoItem]);\n  };\n\n  // Edit any todo item: task & description\n  const editTodoItem = (todoId, todoTask, todoDesc) => {\n    const tmpTodoList = todoList.map(\n      todo => (todo.id === todoId\n        ? { ...todo, task: todoTask, desc: todoDesc }\n        : todo),\n    );\n    setTodoList(tmpTodoList);\n  };\n\n  // Change status of todo item\n  const updateTodoItemStatus = (todoId) => {\n    setTodoList(\n      todoList.map(\n        todo => (todo.id === todoId\n          ? { ...todo, status: !todo.status }\n          : todo),\n      ),\n    );\n  };\n\n  // Delete a delete todo item\n  const delelteTodoItem = (todoId) => {\n    setTodoList(todoList.filter(todo => todo.id !== todoId));\n  };\n\n  return (\n    <TodoListContext.Provider value={{\n      todoList,\n      setTodoList,\n      addTodoItem,\n      editTodoItem,\n      delelteTodoItem,\n      updateTodoItemStatus,\n    }}\n    >\n      {children}\n    </TodoListContext.Provider>\n  );\n};\n\nexport const useTodoListContext = () => useContext(TodoListContext);"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEnE,MAAMC,eAAe,gBAAGH,aAAa,EAAE;AAEvC,OAAO,MAAMI,gBAAgB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC3C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMM,WAAW,GAAG,CAACC,WAAW,EAAEC,WAAW,KAAK;IAChD,IAAIC,MAAM,GAAG,CAAC;IACd,IAAIL,QAAQ,CAACM,MAAM,EAAE;MACnBD,MAAM,GAAGL,QAAQ,CAACA,QAAQ,CAACM,MAAM,GAAG,CAAC,CAAC,CAACC,EAAE,GAAG,CAAC;IAC/C;IAEA,MAAMC,WAAW,GAAG;MAClBD,EAAE,EAAEF,MAAM;MACVI,IAAI,EAAEN,WAAW;MACjBO,IAAI,EAAEN,WAAW;MACjBO,MAAM,EAAE;IACV,CAAC;IAEDV,WAAW,CAAEW,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEJ,WAAW,CAAC,CAAC;EACzD,CAAC;;EAED;EACA,MAAMK,YAAY,GAAG,CAACR,MAAM,EAAES,QAAQ,EAAEC,QAAQ,KAAK;IACnD,MAAMC,WAAW,GAAGhB,QAAQ,CAACiB,GAAG,CAC9BC,IAAI,IAAKA,IAAI,CAACX,EAAE,KAAKF,MAAM,GACvB;MAAE,GAAGa,IAAI;MAAET,IAAI,EAAEK,QAAQ;MAAEJ,IAAI,EAAEK;IAAS,CAAC,GAC3CG,IAAK,CACV;IACDjB,WAAW,CAACe,WAAW,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMG,oBAAoB,GAAId,MAAM,IAAK;IACvCJ,WAAW,CACTD,QAAQ,CAACiB,GAAG,CACVC,IAAI,IAAKA,IAAI,CAACX,EAAE,KAAKF,MAAM,GACvB;MAAE,GAAGa,IAAI;MAAEP,MAAM,EAAE,CAACO,IAAI,CAACP;IAAO,CAAC,GACjCO,IAAK,CACV,CACF;EACH,CAAC;;EAED;EACA,MAAME,eAAe,GAAIf,MAAM,IAAK;IAClCJ,WAAW,CAACD,QAAQ,CAACqB,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACX,EAAE,KAAKF,MAAM,CAAC,CAAC;EAC1D,CAAC;EAED,oBACE,QAAC,eAAe,CAAC,QAAQ;IAAC,KAAK,EAAE;MAC/BL,QAAQ;MACRC,WAAW;MACXC,WAAW;MACXW,YAAY;MACZO,eAAe;MACfD;IACF,CAAE;IAAA,UAECpB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACgB;AAE/B,CAAC;AAAC,GA3DWD,gBAAgB;AAAA,KAAhBA,gBAAgB;AA6D7B,OAAO,MAAMwB,kBAAkB,GAAG;EAAA;EAAA,OAAM3B,UAAU,CAACE,eAAe,CAAC;AAAA;AAAC,IAAvDyB,kBAAkB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}