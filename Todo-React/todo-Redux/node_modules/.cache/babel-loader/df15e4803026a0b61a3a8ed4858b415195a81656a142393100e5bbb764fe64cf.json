{"ast":null,"code":"var _jsxFileName = \"/home/tushhr/Projects/Page One/Todo-React/todo-Redux/src/pages/EditTodo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { editTodoItem } from '../stores/todo';\nimport { EDIT_TODO } from '../utils/constants';\nimport '../styles/TodoForm.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditTodo() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // Fetching details from storage\n  const {\n    id\n  } = useParams();\n  const {\n    todoList\n  } = useSelector(state => state.todoStore);\n  const {\n    id: oldTodoId,\n    task: oldTodoTask,\n    desc: oldTodoDesc\n  } = todoList[id];\n\n  // Updating our new todo, with the old todo's task\n  const [newTodo, setNewTodo] = useState({\n    id: oldTodoId,\n    task: oldTodoTask,\n    desc: oldTodoDesc\n  });\n\n  // Update Todo list according to the updated todo-task\n  const updateTodoItem = () => {\n    dispatch(editTodoItem(newTodo));\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"edit-form__header headerr\",\n      children: EDIT_TODO.header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-form__fields\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"todo-form__input\",\n        placeholder: EDIT_TODO.form.task,\n        onChange: e => setNewTodo({\n          ...newTodo,\n          task: e.target.value\n        }),\n        value: newTodo.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        className: \"todo-form__input todo-form__desc\",\n        placeholder: EDIT_TODO.form.desc,\n        onChange: e => setNewTodo({\n          ...newTodo,\n          desc: e.target.value\n        }),\n        value: newTodo.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      id: \"todo-submit-button\",\n      className: \"todo-form__button btn btn-primary\",\n      onClick: () => updateTodoItem(),\n      children: \"Update!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(EditTodo, \"IKdtJpgCare0HiCdbUwXMJPnGC4=\", false, function () {\n  return [useDispatch, useNavigate, useParams, useSelector];\n});\n_c = EditTodo;\nvar _c;\n$RefreshReg$(_c, \"EditTodo\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","useNavigate","useParams","editTodoItem","EDIT_TODO","EditTodo","dispatch","navigate","id","todoList","state","todoStore","oldTodoId","task","oldTodoTask","desc","oldTodoDesc","newTodo","setNewTodo","updateTodoItem","header","form","e","target","value"],"sources":["/home/tushhr/Projects/Page One/Todo-React/todo-Redux/src/pages/EditTodo.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport { editTodoItem } from '../stores/todo';\nimport { EDIT_TODO } from '../utils/constants';\nimport '../styles/TodoForm.scss';\n\nexport default function EditTodo() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // Fetching details from storage\n  const { id } = useParams();\n  const { todoList } = useSelector((state) => state.todoStore);\n\n  const {\n    id: oldTodoId,\n    task: oldTodoTask,\n    desc: oldTodoDesc,\n  } = todoList[id];\n\n  // Updating our new todo, with the old todo's task\n  const [newTodo, setNewTodo] = useState({\n    id: oldTodoId,\n    task: oldTodoTask,\n    desc: oldTodoDesc,\n  });\n\n  // Update Todo list according to the updated todo-task\n  const updateTodoItem = () => {\n    dispatch(editTodoItem(newTodo));\n    navigate('/');\n  };\n\n  return (\n    <div className=\"edit-form\">\n      <header className=\"edit-form__header headerr\">\n        {EDIT_TODO.header}\n      </header>\n      <div className=\"todo-form__fields\">\n        <input\n          type=\"text\"\n          className=\"todo-form__input\"\n          placeholder={EDIT_TODO.form.task}\n          onChange={(e) => setNewTodo({ ...newTodo, task: e.target.value })}\n          value={newTodo.task}\n        />\n\n        <textarea\n          type=\"text\"\n          className=\"todo-form__input todo-form__desc\"\n          placeholder={EDIT_TODO.form.desc}\n          onChange={(e) => setNewTodo({ ...newTodo, desc: e.target.value })}\n          value={newTodo.desc}\n        />\n      </div>\n\n      <button\n        type=\"button\"\n        id=\"todo-submit-button\"\n        className=\"todo-form__button btn btn-primary\"\n        onClick={() => updateTodoItem()}\n      >\n        Update!\n      </button>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAEzD,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,OAAO,yBAAyB;AAAC;AAEjC,eAAe,SAASC,QAAQ,GAAG;EAAA;EACjC,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B,MAAMQ,QAAQ,GAAGN,WAAW,EAAE;;EAE9B;EACA,MAAM;IAAEO;EAAG,CAAC,GAAGN,SAAS,EAAE;EAC1B,MAAM;IAAEO;EAAS,CAAC,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,SAAS,CAAC;EAE5D,MAAM;IACJH,EAAE,EAAEI,SAAS;IACbC,IAAI,EAAEC,WAAW;IACjBC,IAAI,EAAEC;EACR,CAAC,GAAGP,QAAQ,CAACD,EAAE,CAAC;;EAEhB;EACA,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC;IACrCU,EAAE,EAAEI,SAAS;IACbC,IAAI,EAAEC,WAAW;IACjBC,IAAI,EAAEC;EACR,CAAC,CAAC;;EAEF;EACA,MAAMG,cAAc,GAAG,MAAM;IAC3Bb,QAAQ,CAACH,YAAY,CAACc,OAAO,CAAC,CAAC;IAC/BV,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAQ,SAAS,EAAC,2BAA2B;MAAA,UAC1CH,SAAS,CAACgB;IAAM;MAAA;MAAA;MAAA;IAAA,QACV,eACT;MAAK,SAAS,EAAC,mBAAmB;MAAA,wBAChC;QACE,IAAI,EAAC,MAAM;QACX,SAAS,EAAC,kBAAkB;QAC5B,WAAW,EAAEhB,SAAS,CAACiB,IAAI,CAACR,IAAK;QACjC,QAAQ,EAAGS,CAAC,IAAKJ,UAAU,CAAC;UAAE,GAAGD,OAAO;UAAEJ,IAAI,EAAES,CAAC,CAACC,MAAM,CAACC;QAAM,CAAC,CAAE;QAClE,KAAK,EAAEP,OAAO,CAACJ;MAAK;QAAA;QAAA;QAAA;MAAA,QACpB,eAEF;QACE,IAAI,EAAC,MAAM;QACX,SAAS,EAAC,kCAAkC;QAC5C,WAAW,EAAET,SAAS,CAACiB,IAAI,CAACN,IAAK;QACjC,QAAQ,EAAGO,CAAC,IAAKJ,UAAU,CAAC;UAAE,GAAGD,OAAO;UAAEF,IAAI,EAAEO,CAAC,CAACC,MAAM,CAACC;QAAM,CAAC,CAAE;QAClE,KAAK,EAAEP,OAAO,CAACF;MAAK;QAAA;QAAA;QAAA;MAAA,QACpB;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eAEN;MACE,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,oBAAoB;MACvB,SAAS,EAAC,mCAAmC;MAC7C,OAAO,EAAE,MAAMI,cAAc,EAAG;MAAA,UACjC;IAED;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GA5DuBd,QAAQ;EAAA,QACbN,WAAW,EACXE,WAAW,EAGbC,SAAS,EACHF,WAAW;AAAA;AAAA,KANVK,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}